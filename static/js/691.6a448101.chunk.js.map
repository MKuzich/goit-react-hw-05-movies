{"version":3,"file":"static/js/691.6a448101.chunk.js","mappings":"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","sources":["components/ActorCard/ActorCard.styled.jsx","components/ActorCard/ActorCard.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Portrait = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  bottom: 0;\n`;\n","import PropTypes from 'prop-types';\nimport { FcPortraitMode } from 'react-icons/fc';\nimport { Portrait, Wrapper } from './ActorCard.styled';\n\nexport const ActorCard = ({ photo, name, character }) => {\n  return (\n    <>\n      {photo ? (\n        <>\n          <img\n            src={'https://image.tmdb.org/t/p/original' + photo}\n            alt={name}\n            loading=\"lazy\"\n          />\n          <h3>{name}</h3>\n          <p>Character: {character}</p>\n        </>\n      ) : (\n        <>\n          <Portrait>\n            <FcPortraitMode size=\"100%\" />\n          </Portrait>\n          <Wrapper>\n            <h3>{name}</h3>\n            <p>Character: {character}</p>\n          </Wrapper>\n        </>\n      )}\n    </>\n  );\n};\n\nActorCard.propTypes = {\n  photo: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${p => p.theme.space[4]}px;\n`;\n\nexport const Card = styled.li`\n  width: calc((100% - 4 * ${p => p.theme.space[4]}px) / 5);\n  position: relative;\n`;\n\nexport const Title = styled.h2`\n  margin-top: ${p => p.theme.space[5]}px;\n  margin-bottom: ${p => p.theme.space[5]}px;\n  text-align: center;\n  color: ${p => p.theme.colors.title};\n  padding-bottom: ${p => p.theme.space[4]}px;\n  font-size: ${p => p.theme.fontSizes.l};\n`;\n","import { getMovieCast } from 'services/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ActorCard } from '../ActorCard/ActorCard';\nimport { List, Card, Title } from './Cast.styled';\n\nconst Status = {\n  idle: 'IDLE',\n  pending: 'PENDING',\n  resolved: 'RESOLVED',\n  rejected: 'REJECTED',\n};\nconst { idle, pending, resolved, rejected } = Status;\n\nconst Cast = () => {\n  const [cast, setCast] = useState();\n  const [status, setStatus] = useState(idle);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setStatus(pending);\n    getMovieCast(movieId)\n      .then(r => {\n        setCast(r);\n        setStatus(resolved);\n      })\n      .catch(error => {\n        console.log(error);\n        setStatus(rejected);\n      });\n  }, [movieId]);\n  return (\n    <section>\n      <Title>Cast</Title>\n      <List>\n        {status === resolved &&\n          cast.map(actor => {\n            const { profile_path, name, character, id } = actor;\n            return (\n              <Card key={id}>\n                <ActorCard\n                  photo={profile_path}\n                  name={name}\n                  character={character}\n                />\n              </Card>\n            );\n          })}\n      </List>\n    </section>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '0d2fc6d2597c3f501e7437cf40d08b03';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getPopularMovies = async () => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/trending/movie/day?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data.results;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getRequestedMovies = async request => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: request,\n  });\n  const URL = `${BASE_URL}/search/movie?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data.results;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieById = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/movie/${id}?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieCast = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/movie/${id}/credits?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data.cast;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieReviews = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/movie/${id}/reviews?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data.results;\n  } catch (error) {\n    return error;\n  }\n};\n"],"names":["Portrait","styled","Wrapper","ActorCard","photo","name","character","src","alt","loading","size","List","p","theme","space","Card","Title","colors","title","fontSizes","l","idle","pending","resolved","rejected","useState","cast","setCast","status","setStatus","movieId","useParams","useEffect","getMovieCast","then","r","catch","error","console","log","map","actor","profile_path","id","API_KEY","BASE_URL","getPopularMovies","searchParams","URLSearchParams","api_key","URL","axios","response","data","results","getRequestedMovies","request","query","getMovieById","getMovieReviews"],"sourceRoot":""}