{"version":3,"file":"static/js/961.5f0ac76a.chunk.js","mappings":"6MAWQA,EALA,OAKMC,EAJH,UAIYC,EAHX,WAGqBC,EAFrB,WAiEZ,UA7DqB,WAAO,IAAD,IACzB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAASJ,GAArC,eAAOO,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE7CC,EAAAA,EAAAA,YAAU,WACRP,EAAUP,IACVe,EAAAA,EAAAA,IAAaP,GACVQ,MAAK,SAAAC,GACJZ,EAASY,GACTV,EAAUN,MAEXiB,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZZ,EAAUL,QAEb,CAACM,IAEJ,IACEc,EAMElB,EANFkB,YACAC,EAKEnB,EALFmB,eACAC,EAIEpB,EAJFoB,aACAC,EAGErB,EAHFqB,aACAC,EAEEtB,EAFFsB,SACAC,EACEvB,EADFuB,OAGF,OACE,+BACGrB,IAAWL,IACV,iCACE,SAAC,KAAD,CAAM2B,GAAIlB,EAAV,mBACA,gBACEmB,IAAK,uCAAyCP,EAC9CQ,IAAKP,KAEP,0BACGA,EADH,eACwBC,EAAaO,MAAM,EAAG,GAD9C,SAGA,wCAA+B,GAAfN,EAAhB,QACA,sCACA,uBAAIC,KACJ,oCACA,uBACGC,EAAOK,QACN,SAACC,EAAWC,GAAZ,OAAsBD,EAAY,KAAOC,EAAMC,OAC/C,OAGJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,SAIL/B,IAAWP,IAAQ,6C,0JCnEpBuC,EAAU,mCACVC,EAAW,+BAEJC,EAAgB,mCAAG,+FACxBC,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,IAELM,EAJwB,UAIfL,EAJe,+BAIgBE,GAJhB,kBAMLI,IAAAA,IAAUD,GANL,cAMtBE,EANsB,yBAOrBA,EAASC,KAAKC,SAPO,wHAAH,qDAahBC,EAAkB,mCAAG,WAAMC,GAAN,kFAC1BT,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,EACTa,MAAOD,IAEHN,EAL0B,UAKjBL,EALiB,yBAKQE,GALR,kBAOPI,IAAAA,IAAUD,GAPH,cAOxBE,EAPwB,yBAQvBA,EAASC,KAAKC,SARS,wHAAH,sDAclBjC,EAAY,mCAAG,WAAMqC,GAAN,kFACpBX,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,IAELM,EAJoB,UAIXL,EAJW,kBAIOa,EAJP,YAIaX,GAJb,kBAMDI,IAAAA,IAAUD,GANT,cAMlBE,EANkB,yBAOjBA,EAASC,MAPQ,wHAAH","sources":["pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { Outlet, useParams, Link, useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { getMovieById } from 'services/api';\nimport { useState, useEffect } from 'react';\n\nconst Status = {\n  idle: 'IDLE',\n  pending: 'PENDING',\n  resolved: 'RESOLVED',\n  rejected: 'REJECTED',\n};\nconst { idle, pending, resolved, rejected } = Status;\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [status, setStatus] = useState(idle);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setStatus(pending);\n    getMovieById(movieId)\n      .then(r => {\n        setMovie(r);\n        setStatus(resolved);\n      })\n      .catch(error => {\n        console.log(error);\n        setStatus(rejected);\n      });\n  }, [movieId]);\n\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movie;\n\n  return (\n    <section>\n      {status === resolved && (\n        <>\n          <Link to={backLinkHref}>Back</Link>\n          <img\n            src={'https://image.tmdb.org/t/p/original/' + poster_path}\n            alt={original_title}\n          />\n          <h1>\n            {original_title} {`(${release_date.slice(0, 3)})`}\n          </h1>\n          <p>User Score: {vote_average * 10}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>\n            {genres.reduce(\n              (allGenres, genre) => allGenres + ', ' + genre.name,\n              ''\n            )}\n          </p>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n      {status === idle && <p>HI HI HI !!!</p>}\n    </section>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '0d2fc6d2597c3f501e7437cf40d08b03';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getPopularMovies = async () => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/trending/movie/day?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data.results;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getRequestedMovies = async request => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: request,\n  });\n  const URL = `${BASE_URL}/search/movie?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data.results;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieById = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/movie/${id}?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\n"],"names":["idle","pending","resolved","rejected","useState","movie","setMovie","status","setStatus","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","getMovieById","then","r","catch","error","console","log","poster_path","original_title","release_date","vote_average","overview","genres","to","src","alt","slice","reduce","allGenres","genre","name","Suspense","fallback","API_KEY","BASE_URL","getPopularMovies","searchParams","URLSearchParams","api_key","URL","axios","response","data","results","getRequestedMovies","request","query","id"],"sourceRoot":""}