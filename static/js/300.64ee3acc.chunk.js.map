{"version":3,"file":"static/js/300.64ee3acc.chunk.js","mappings":"yOAEaA,EAAa,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACnC,OACE,iCACE,wBAAKD,KACL,uBAAIC,QCKFC,EALA,OAKMC,EAJH,UAIYC,EAHX,WAGqBC,EAFrB,WAqCZ,EAjCgB,WACd,OAA8BC,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAASJ,GAArC,eAAOO,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACRH,EAAUP,IACVW,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GACJR,EAAWQ,GACXN,EAAUN,MAEXa,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZR,EAAUL,QAEb,CAACM,KAGF,wBACGF,IAAWL,GACVG,EAAQc,KAAI,SAAAC,GACV,IAAQtB,EAAwBsB,EAAxBtB,OAAQC,EAAgBqB,EAAhBrB,QAASsB,EAAOD,EAAPC,GACzB,OACE,yBACE,SAACxB,EAAD,CAAYC,OAAQA,EAAQC,QAASA,KAD9BsB,U,0MCnCfC,EAAU,mCACVC,EAAW,+BAEJC,EAAgB,mCAAG,+FACxBC,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,IAELM,EAJwB,UAIfL,EAJe,+BAIgBE,GAJhB,kBAMLI,IAAAA,IAAUD,GANL,cAMtBE,EANsB,yBAOrBA,EAASC,KAAKC,SAPO,wHAAH,qDAahBC,EAAkB,mCAAG,WAAMC,GAAN,kFAC1BT,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,EACTa,MAAOD,IAEHN,EAL0B,UAKjBL,EALiB,yBAKQE,GALR,kBAOPI,IAAAA,IAAUD,GAPH,cAOxBE,EAPwB,yBAQvBA,EAASC,KAAKC,SARS,wHAAH,sDAclBI,EAAY,mCAAG,WAAMf,GAAN,kFACpBI,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,IAELM,EAJoB,UAIXL,EAJW,kBAIOF,EAJP,YAIaI,GAJb,kBAMDI,IAAAA,IAAUD,GANT,cAMlBE,EANkB,yBAOjBA,EAASC,MAPQ,wHAAH,sDAaZM,EAAY,mCAAG,WAAMhB,GAAN,kFACpBI,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,IAELM,EAJoB,UAIXL,EAJW,kBAIOF,EAJP,oBAIqBI,GAJrB,kBAMDI,IAAAA,IAAUD,GANT,cAMlBE,EANkB,yBAOjBA,EAASC,KAAKO,MAPG,wHAAH,sDAaZ1B,EAAe,mCAAG,WAAMS,GAAN,kFACvBI,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,IAELM,EAJuB,UAIdL,EAJc,kBAIIF,EAJJ,oBAIkBI,GAJlB,kBAMJI,IAAAA,IAAUD,GANN,cAMrBE,EANqB,yBAOpBA,EAASC,KAAKC,SAPM,wHAAH","sources":["components/ReviewCard/ReviewCard.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const ReviewCard = ({ author, content }) => {\n  return (\n    <>\n      <h3>{author}</h3>\n      <p>{content}</p>\n    </>\n  );\n};\n\nReviewCard.propTypes = {\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n","import { getMovieReviews } from 'services/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewCard } from 'components/ReviewCard/ReviewCard';\n\nconst Status = {\n  idle: 'IDLE',\n  pending: 'PENDING',\n  resolved: 'RESOLVED',\n  rejected: 'REJECTED',\n};\nconst { idle, pending, resolved, rejected } = Status;\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState();\n  const [status, setStatus] = useState(idle);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setStatus(pending);\n    getMovieReviews(movieId)\n      .then(r => {\n        setReviews(r);\n        setStatus(resolved);\n      })\n      .catch(error => {\n        console.log(error);\n        setStatus(rejected);\n      });\n  }, [movieId]);\n\n  return (\n    <ul>\n      {status === resolved &&\n        reviews.map(review => {\n          const { author, content, id } = review;\n          return (\n            <li key={id}>\n              <ReviewCard author={author} content={content} />\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '0d2fc6d2597c3f501e7437cf40d08b03';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getPopularMovies = async () => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/trending/movie/day?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data.results;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getRequestedMovies = async request => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: request,\n  });\n  const URL = `${BASE_URL}/search/movie?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data.results;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieById = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/movie/${id}?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieCast = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/movie/${id}/credits?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data.cast;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieReviews = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/movie/${id}/reviews?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data.results;\n  } catch (error) {\n    return error;\n  }\n};\n"],"names":["ReviewCard","author","content","idle","pending","resolved","rejected","useState","reviews","setReviews","status","setStatus","movieId","useParams","useEffect","getMovieReviews","then","r","catch","error","console","log","map","review","id","API_KEY","BASE_URL","getPopularMovies","searchParams","URLSearchParams","api_key","URL","axios","response","data","results","getRequestedMovies","request","query","getMovieById","getMovieCast","cast"],"sourceRoot":""}