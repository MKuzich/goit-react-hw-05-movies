{"version":3,"file":"static/js/864.14a3a286.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const CardLink = styled(Link)``;\n\nexport const Title = styled.h2`\n  color: ${p => p.theme.colors.primary};\n  text-align: center;\n  padding: ${p => p.theme.space[4]}px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useHome } from 'pages/Home/Home';\nimport { CardLink, Title } from './MovieCard.styled';\n\nexport const MovieCard = ({ title, poster, id }) => {\n  const location = useLocation();\n  const forHome = useHome();\n  return (\n    <CardLink to={`${forHome ? forHome : ''}${id}`} state={{ from: location }}>\n      <img\n        src={'https://image.tmdb.org/t/p/original/' + poster}\n        alt={title}\n        loading=\"lazy\"\n      />\n      <Title>{title}</Title>\n    </CardLink>\n  );\n};\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${p => p.theme.space[4]}px;\n`;\n\nexport const Card = styled.li`\n  width: calc((100% - 2 * 16px) / 3);\n  border: ${p => p.theme.borders.normal};\n  border-color: ${p => p.theme.colors.borders};\n  border-radius: ${p => p.theme.radii.normal};\n  overflow: hidden;\n  transition: ${p => p.theme.transition.scale},\n    ${p => p.theme.transition.boxShadow};\n  :hover,\n  :focus {\n    box-shadow: ${p => p.theme.shadows.hover};\n    scale: 1.01;\n  }\n`;\n","import { MovieCard } from 'components/MovieCard/MovieCard';\nimport PropTypes from 'prop-types';\nimport { Card, List } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies &&\n        movies.map(({ original_title, poster_path, id }) => {\n          return (\n            <Card key={id}>\n              <MovieCard title={original_title} poster={poster_path} id={id} />\n            </Card>\n          );\n        })}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      original_title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  margin-top: ${p => p.theme.space[9]}px;\n  padding-left: ${p => p.theme.space[5]}px;\n  padding-right: ${p => p.theme.space[5]}px;\n  padding-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  color: ${p => p.theme.colors.title};\n  padding-bottom: ${p => p.theme.space[5]}px;\n  font-size: ${p => p.theme.fontSizes.xl};\n`;\n","import { getPopularMovies } from '../../services/api';\nimport { useState, useEffect, createContext, useContext } from 'react';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport { Section, Title } from './Home.styled';\n\nconst HomeContext = createContext();\nexport const useHome = () => useContext(HomeContext);\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    getPopularMovies()\n      .then(r => {\n        setMovies(r);\n      })\n      .catch(console.log);\n  }, []);\n  return (\n    <main>\n      <Section>\n        <Title>Trending today</Title>\n        <HomeContext.Provider value={'movies/'}>\n          <MoviesList movies={movies} />\n        </HomeContext.Provider>\n      </Section>\n    </main>\n  );\n};\n\nexport default Home;\n","import PropTypes from 'prop-types';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(e.target.request.value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input name=\"request\" type=\"text\" />\n      <button type=\"submit\">\n        <AiOutlineSearch />\n      </button>\n    </form>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  margin-top: ${p => p.theme.space[9]}px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: ${p => p.theme.space[4]}px;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  color: ${p => p.theme.colors.title};\n  padding-bottom: ${p => p.theme.space[4]}px;\n  font-size: ${p => p.theme.fontSizes.l};\n`;\n\nexport const AccentRequest = styled.span`\n  color: ${p => p.theme.colors.accent};\n`;\n","import { useState, useEffect } from 'react';\nimport { getRequestedMovies } from 'services/api';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport { SearchBar } from '../../components/SearchBar/SearchBar';\nimport { Section, Title, AccentRequest } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [request, setRequest] = useState();\n\n  useEffect(() => {\n    if (!request) {\n      return;\n    }\n\n    getRequestedMovies(request)\n      .then(r => setMovies(r))\n      .catch(console.log);\n  }, [request]);\n\n  return (\n    <main>\n      <Section>\n        <SearchBar onSubmit={setRequest} />\n        <Title>\n          Movies for request <AccentRequest>{request}</AccentRequest>\n        </Title>\n        <MoviesList movies={movies} />\n      </Section>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '0d2fc6d2597c3f501e7437cf40d08b03';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getPopularMovies = async () => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/trending/movie/day?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data.results;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getRequestedMovies = async request => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: request,\n  });\n  const URL = `${BASE_URL}/search/movie?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data.results;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieById = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/movie/${id}?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieCast = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/movie/${id}/credits?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data.cast;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieReviews = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/movie/${id}/reviews?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data.results;\n  } catch (error) {\n    return error;\n  }\n};\n"],"names":["CardLink","styled","Link","Title","p","theme","colors","primary","space","MovieCard","title","poster","id","location","useLocation","forHome","useHome","to","state","from","src","alt","loading","List","Card","borders","normal","radii","transition","scale","boxShadow","shadows","hover","MoviesList","movies","map","original_title","poster_path","Section","fontSizes","xl","HomeContext","createContext","useContext","useState","setMovies","useEffect","getPopularMovies","then","r","catch","console","log","Provider","value","SearchBar","onSubmit","e","preventDefault","target","request","name","type","l","AccentRequest","accent","setRequest","getRequestedMovies","API_KEY","BASE_URL","searchParams","URLSearchParams","api_key","URL","axios","response","data","results","query","getMovieById","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}