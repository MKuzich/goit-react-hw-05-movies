{"version":3,"file":"static/js/741.fb438771.chunk.js","mappings":"yOAEaA,EAAY,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACvC,OACE,iCACE,gBAAKC,IAAK,uCAAyCH,EAAOI,IAAKH,KAC/D,wBAAKA,KACL,uCAAeC,SCIbG,EALA,OAKMC,EAJH,UAIYC,EAHX,WAGqBC,EAFrB,WAwCZ,EApCa,WACX,OAAwBC,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAASJ,GAArC,eAAOO,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACRH,EAAUP,IACVW,EAAAA,EAAAA,IAAaH,GACVI,MAAK,SAAAC,GACJR,EAAQQ,GACRN,EAAUN,MAEXa,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZR,EAAUL,QAEb,CAACM,KAEF,wBACGF,IAAWL,GACVG,EAAKc,KAAI,SAAAC,GACP,IAAQC,EAAsCD,EAAtCC,aAAczB,EAAwBwB,EAAxBxB,KAAMC,EAAkBuB,EAAlBvB,UAAWyB,EAAOF,EAAPE,GACvC,OACE,yBACE,SAAC5B,EAAD,CACEC,MAAO0B,EACPzB,KAAMA,EACNC,UAAWA,KAJNyB,U,0MClCfC,EAAU,mCACVC,EAAW,+BAEJC,EAAgB,mCAAG,+FACxBC,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,IAELM,EAJwB,UAIfL,EAJe,+BAIgBE,GAJhB,kBAMLI,IAAAA,IAAUD,GANL,cAMtBE,EANsB,yBAOrBA,EAASC,KAAKC,SAPO,wHAAH,qDAahBC,EAAkB,mCAAG,WAAMC,GAAN,kFAC1BT,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,EACTa,MAAOD,IAEHN,EAL0B,UAKjBL,EALiB,yBAKQE,GALR,kBAOPI,IAAAA,IAAUD,GAPH,cAOxBE,EAPwB,yBAQvBA,EAASC,KAAKC,SARS,wHAAH,sDAclBI,EAAY,mCAAG,WAAMf,GAAN,kFACpBI,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,IAELM,EAJoB,UAIXL,EAJW,kBAIOF,EAJP,YAIaI,GAJb,kBAMDI,IAAAA,IAAUD,GANT,cAMlBE,EANkB,yBAOjBA,EAASC,MAPQ,wHAAH,sDAaZpB,EAAY,mCAAG,WAAMU,GAAN,kFACpBI,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,IAELM,EAJoB,UAIXL,EAJW,kBAIOF,EAJP,oBAIqBI,GAJrB,kBAMDI,IAAAA,IAAUD,GANT,cAMlBE,EANkB,yBAOjBA,EAASC,KAAK3B,MAPG,wHAAH,sDAaZiC,EAAe,mCAAG,WAAMhB,GAAN,kFACvBI,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,IAELM,EAJuB,UAIdL,EAJc,kBAIIF,EAJJ,oBAIkBI,GAJlB,kBAMJI,IAAAA,IAAUD,GANN,cAMrBE,EANqB,yBAOpBA,EAASC,KAAKC,SAPM,wHAAH","sources":["components/ActorCard/ActorCard.jsx","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const ActorCard = ({ photo, name, character }) => {\n  return (\n    <>\n      <img src={'https://image.tmdb.org/t/p/original/' + photo} alt={name} />\n      <h3>{name}</h3>\n      <p>Character: {character}</p>\n    </>\n  );\n};\n\nActorCard.propTypes = {\n  photo: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n};\n","import { getMovieCast } from 'services/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ActorCard } from '../ActorCard/ActorCard';\n\nconst Status = {\n  idle: 'IDLE',\n  pending: 'PENDING',\n  resolved: 'RESOLVED',\n  rejected: 'REJECTED',\n};\nconst { idle, pending, resolved, rejected } = Status;\n\nconst Cast = () => {\n  const [cast, setCast] = useState();\n  const [status, setStatus] = useState(idle);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setStatus(pending);\n    getMovieCast(movieId)\n      .then(r => {\n        setCast(r);\n        setStatus(resolved);\n      })\n      .catch(error => {\n        console.log(error);\n        setStatus(rejected);\n      });\n  }, [movieId]);\n  return (\n    <ul>\n      {status === resolved &&\n        cast.map(actor => {\n          const { profile_path, name, character, id } = actor;\n          return (\n            <li key={id}>\n              <ActorCard\n                photo={profile_path}\n                name={name}\n                character={character}\n              />\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '0d2fc6d2597c3f501e7437cf40d08b03';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getPopularMovies = async () => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/trending/movie/day?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data.results;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getRequestedMovies = async request => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: request,\n  });\n  const URL = `${BASE_URL}/search/movie?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data.results;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieById = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/movie/${id}?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieCast = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/movie/${id}/credits?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data.cast;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieReviews = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/movie/${id}/reviews?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data.results;\n  } catch (error) {\n    return error;\n  }\n};\n"],"names":["ActorCard","photo","name","character","src","alt","idle","pending","resolved","rejected","useState","cast","setCast","status","setStatus","movieId","useParams","useEffect","getMovieCast","then","r","catch","error","console","log","map","actor","profile_path","id","API_KEY","BASE_URL","getPopularMovies","searchParams","URLSearchParams","api_key","URL","axios","response","data","results","getRequestedMovies","request","query","getMovieById","getMovieReviews"],"sourceRoot":""}