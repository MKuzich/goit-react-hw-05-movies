{"version":3,"file":"static/js/746.da934573.chunk.js","mappings":"8LAGaA,EAAY,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,GACzC,OACE,UAAC,KAAD,CAAMC,GAAE,iBAAYD,GAApB,WACE,gBAAKE,IAAK,uCAAyCH,EAAQI,IAAKL,KAChE,wBAAKA,QCJEM,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,OACE,wBACGA,GACCA,EAAOC,KAAI,YAA0C,IAAvCC,EAAsC,EAAtCA,eAAgBC,EAAsB,EAAtBA,YAAaR,EAAS,EAATA,GACzC,OACE,yBACE,SAACH,EAAD,CAAWC,MAAOS,EAAgBR,OAAQS,EAAaR,GAAIA,KADpDA,U,iICNRS,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAM1B,OACE,kBAAMA,SANa,SAAAC,GACnBA,EAAEC,iBACFF,EAASC,EAAEE,OAAOC,QAAQC,QAI1B,WACE,kBAAOC,KAAK,UAAUC,KAAK,UAC3B,mBAAQA,KAAK,SAAb,UACE,SAAC,MAAD,UCiBR,EAzBe,WACb,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOb,EAAP,KAAec,EAAf,KACA,GAA8BD,EAAAA,EAAAA,UAAS,MAAvC,eAAOJ,EAAP,KAAgBM,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACJP,IAIJQ,EAAAA,EAAAA,IAAmBR,GAChBS,MAAK,SAAAC,GAAC,OAAIL,EAAUK,MACpBC,MAAMC,QAAQC,OAChB,CAACb,EAAST,KAGX,6BACE,SAACI,EAAD,CAAWC,SAAUU,KACrB,gCACE,iDACA,SAAChB,EAAA,EAAD,CAAYC,OAAQA,Y,0JCtBtBuB,EAAU,mCACVC,EAAW,+BAEJC,EAAgB,mCAAG,+FACxBC,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,IAELM,EAJwB,UAIfL,EAJe,+BAIgBE,GAJhB,kBAMLI,IAAAA,IAAUD,GANL,cAMtBE,EANsB,yBAOrBA,EAASC,KAAKC,SAPO,wHAAH,qDAahBhB,EAAkB,mCAAG,WAAMR,GAAN,kFAC1BiB,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,EACTW,MAAOzB,IAEHoB,EAL0B,UAKjBL,EALiB,yBAKQE,GALR,kBAOPI,IAAAA,IAAUD,GAPH,cAOxBE,EAPwB,yBAQvBA,EAASC,KAAKC,SARS,wHAAH,sDAclBE,EAAY,mCAAG,WAAMxC,GAAN,kFACpB+B,EAAe,IAAIC,gBAAgB,CACvCC,QAASL,IAELM,EAJoB,UAIXL,EAJW,kBAIO7B,EAJP,YAIa+B,GAJb,kBAMDI,IAAAA,IAAUD,GANT,cAMlBE,EANkB,yBAOjBA,EAASC,MAPQ,wHAAH","sources":["components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({ title, poster, id }) => {\n  return (\n    <Link to={`movies/${id}`}>\n      <img src={'https://image.tmdb.org/t/p/original/' + poster} alt={title} />\n      <h2>{title}</h2>\n    </Link>\n  );\n};\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","import { MovieCard } from 'components/MovieCard/MovieCard';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <ul>\n      {movies &&\n        movies.map(({ original_title, poster_path, id }) => {\n          return (\n            <li key={id}>\n              <MovieCard title={original_title} poster={poster_path} id={id} />\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      original_title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import PropTypes from 'prop-types';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(e.target.request.value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input name=\"request\" type=\"text\" />\n      <button type=\"submit\">\n        <AiOutlineSearch />\n      </button>\n    </form>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { getRequestedMovies } from 'services/api';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport { SearchBar } from '../../components/SearchBar/SearchBar';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [request, setRequest] = useState(null);\n\n  useEffect(() => {\n    if (request) {\n      return;\n    }\n\n    getRequestedMovies(request)\n      .then(r => setMovies(r))\n      .catch(console.log);\n  }, [request, movies]);\n\n  return (\n    <main>\n      <SearchBar onSubmit={setRequest} />\n      <section>\n        <h1>Movies for request {}</h1>\n        <MoviesList movies={movies} />\n      </section>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '0d2fc6d2597c3f501e7437cf40d08b03';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getPopularMovies = async () => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/trending/movie/day?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data.results;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getRequestedMovies = async request => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: request,\n  });\n  const URL = `${BASE_URL}/search/movie?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data.results;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieById = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/movie/${id}?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\n"],"names":["MovieCard","title","poster","id","to","src","alt","MoviesList","movies","map","original_title","poster_path","SearchBar","onSubmit","e","preventDefault","target","request","value","name","type","useState","setMovies","setRequest","useEffect","getRequestedMovies","then","r","catch","console","log","API_KEY","BASE_URL","getPopularMovies","searchParams","URLSearchParams","api_key","URL","axios","response","data","results","query","getMovieById"],"sourceRoot":""}