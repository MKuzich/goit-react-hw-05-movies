{"version":3,"file":"static/js/544.d1945dd3.chunk.js","mappings":"8LAGaA,EAAY,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,GACzC,OACE,UAAC,KAAD,CAAMC,GAAE,gBAAWD,GAAnB,WACE,gBAAKE,IAAK,uCAAyCH,EAAQI,IAAKL,KAChE,wBAAKA,QCJEM,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,OACE,wBACGA,GACCA,EAAOC,KAAI,YAA0C,IAAvCC,EAAsC,EAAtCA,eAAgBC,EAAsB,EAAtBA,YAAaR,EAAS,EAATA,GACzC,OACE,yBACE,SAACH,EAAD,CAAWC,MAAOS,EAAgBR,OAAQS,EAAaR,GAAIA,KADpDA,U,iFCcrB,UAnBa,WACX,OAA4BS,EAAAA,EAAAA,UAAS,MAArC,eAAOJ,EAAP,KAAeK,EAAf,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZJ,EAAUI,MAEXG,MAAMF,QAAQC,OAChB,KAED,gCACE,4CACA,SAAC,IAAD,CAAYX,OAAQA,S,kIChBpBa,EAAU,mCACVC,EAAW,+BAEJP,EAAgB,mCAAG,+FACxBQ,EAAe,IAAIC,gBAAgB,CACvCC,QAASJ,IAELK,EAJwB,UAIfJ,EAJe,+BAIgBC,GAJhB,kBAMLI,IAAAA,IAAUD,GANL,cAMtBE,EANsB,yBAOrBA,EAASC,SAPY,wHAAH,qDAahBC,EAAkB,mCAAG,WAAMC,GAAN,kFAC1BR,EAAe,IAAIC,gBAAgB,CACvCC,QAASJ,EACTW,MAAOD,IAEHL,EAL0B,UAKjBJ,EALiB,yBAKQC,GALR,kBAOPI,IAAAA,IAAUD,GAPH,cAOxBE,EAPwB,yBAQvBA,EAASC,SARc,wHAAH","sources":["components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({ title, poster, id }) => {\n  return (\n    <Link to={`movie/${id}`}>\n      <img src={'https://image.tmdb.org/t/p/original/' + poster} alt={title} />\n      <h2>{title}</h2>\n    </Link>\n  );\n};\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n};\n","import { MovieCard } from 'components/MovieCard/MovieCard';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <ul>\n      {movies &&\n        movies.map(({ original_title, poster_path, id }) => {\n          return (\n            <li key={id}>\n              <MovieCard title={original_title} poster={poster_path} id={id} />\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      original_title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { getPopularMovies } from '../../services/api';\nimport { useState, useEffect } from 'react';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    getPopularMovies()\n      .then(r => {\n        console.log(r);\n        setMovies(r);\n      })\n      .catch(console.log);\n  }, []);\n  return (\n    <section>\n      <h1>Trending today</h1>\n      <MoviesList movies={movies} />\n    </section>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '0d2fc6d2597c3f501e7437cf40d08b03';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getPopularMovies = async () => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/trending/movie/day?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.results;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getRequestedMovies = async request => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query: request,\n  });\n  const URL = `${BASE_URL}/search/movie?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response.results;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getMovieById = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const URL = `${BASE_URL}/search/${id}?${searchParams}`;\n  try {\n    const response = await axios.get(URL);\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\n"],"names":["MovieCard","title","poster","id","to","src","alt","MoviesList","movies","map","original_title","poster_path","useState","setMovies","useEffect","getPopularMovies","then","r","console","log","catch","API_KEY","BASE_URL","searchParams","URLSearchParams","api_key","URL","axios","response","results","getRequestedMovies","request","query"],"sourceRoot":""}